// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/hello.proto

package hello

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HelloReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReq) Reset()         { *m = HelloReq{} }
func (m *HelloReq) String() string { return proto.CompactTextString(m) }
func (*HelloReq) ProtoMessage()    {}
func (*HelloReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7116fbf19896b02, []int{0}
}

func (m *HelloReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReq.Unmarshal(m, b)
}
func (m *HelloReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReq.Marshal(b, m, deterministic)
}
func (m *HelloReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReq.Merge(m, src)
}
func (m *HelloReq) XXX_Size() int {
	return xxx_messageInfo_HelloReq.Size(m)
}
func (m *HelloReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReq.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReq proto.InternalMessageInfo

func (m *HelloReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloRes struct {
	Mes                  string   `protobuf:"bytes,1,opt,name=mes,proto3" json:"mes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRes) Reset()         { *m = HelloRes{} }
func (m *HelloRes) String() string { return proto.CompactTextString(m) }
func (*HelloRes) ProtoMessage()    {}
func (*HelloRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7116fbf19896b02, []int{1}
}

func (m *HelloRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRes.Unmarshal(m, b)
}
func (m *HelloRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRes.Marshal(b, m, deterministic)
}
func (m *HelloRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRes.Merge(m, src)
}
func (m *HelloRes) XXX_Size() int {
	return xxx_messageInfo_HelloRes.Size(m)
}
func (m *HelloRes) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRes.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRes proto.InternalMessageInfo

func (m *HelloRes) GetMes() string {
	if m != nil {
		return m.Mes
	}
	return ""
}

type HelloBackRes struct {
	Mes                  string   `protobuf:"bytes,1,opt,name=mes,proto3" json:"mes,omitempty"`
	Adj                  string   `protobuf:"bytes,2,opt,name=adj,proto3" json:"adj,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloBackRes) Reset()         { *m = HelloBackRes{} }
func (m *HelloBackRes) String() string { return proto.CompactTextString(m) }
func (*HelloBackRes) ProtoMessage()    {}
func (*HelloBackRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7116fbf19896b02, []int{2}
}

func (m *HelloBackRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloBackRes.Unmarshal(m, b)
}
func (m *HelloBackRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloBackRes.Marshal(b, m, deterministic)
}
func (m *HelloBackRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloBackRes.Merge(m, src)
}
func (m *HelloBackRes) XXX_Size() int {
	return xxx_messageInfo_HelloBackRes.Size(m)
}
func (m *HelloBackRes) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloBackRes.DiscardUnknown(m)
}

var xxx_messageInfo_HelloBackRes proto.InternalMessageInfo

func (m *HelloBackRes) GetMes() string {
	if m != nil {
		return m.Mes
	}
	return ""
}

func (m *HelloBackRes) GetAdj() string {
	if m != nil {
		return m.Adj
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloReq)(nil), "hello.HelloReq")
	proto.RegisterType((*HelloRes)(nil), "hello.HelloRes")
	proto.RegisterType((*HelloBackRes)(nil), "hello.HelloBackRes")
}

func init() { proto.RegisterFile("proto/hello.proto", fileDescriptor_f7116fbf19896b02) }

var fileDescriptor_f7116fbf19896b02 = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x48, 0xcd, 0xc9, 0xc9, 0xd7, 0x03, 0xb3, 0x85, 0x58, 0xc1, 0x1c, 0x25, 0x39,
	0x2e, 0x0e, 0x0f, 0x10, 0x23, 0x28, 0xb5, 0x50, 0x48, 0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55,
	0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x56, 0x92, 0x81, 0xcb, 0x17, 0x0b, 0x09, 0x70,
	0x31, 0xe7, 0xa6, 0x16, 0x43, 0xa5, 0x41, 0x4c, 0x25, 0x23, 0x2e, 0x1e, 0xb0, 0xac, 0x53, 0x62,
	0x72, 0x36, 0x56, 0x15, 0x20, 0x91, 0xc4, 0x94, 0x2c, 0x09, 0x26, 0x88, 0x48, 0x62, 0x4a, 0x96,
	0x51, 0x3e, 0x54, 0x4f, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x0e, 0x17, 0x47, 0x70,
	0x62, 0x25, 0x58, 0x48, 0x88, 0x5f, 0x0f, 0xe2, 0x44, 0x98, 0x93, 0xa4, 0xd0, 0x04, 0x8a, 0x85,
	0x0c, 0xb9, 0x38, 0xe1, 0x36, 0x62, 0x2a, 0x17, 0x46, 0x16, 0x80, 0x3a, 0xca, 0x89, 0x37, 0x8a,
	0x1b, 0xec, 0x65, 0x6b, 0xb0, 0x5c, 0x12, 0x1b, 0x98, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x1d, 0xd3, 0xe5, 0x7a, 0x14, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloServiceClient is the client API for HelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloServiceClient interface {
	SayHello(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloRes, error)
	HelloBack(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloBackRes, error)
}

type helloServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloServiceClient(cc *grpc.ClientConn) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) SayHello(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloRes, error) {
	out := new(HelloRes)
	err := c.cc.Invoke(ctx, "/hello.HelloService/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloServiceClient) HelloBack(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloBackRes, error) {
	out := new(HelloBackRes)
	err := c.cc.Invoke(ctx, "/hello.HelloService/HelloBack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServiceServer is the server API for HelloService service.
type HelloServiceServer interface {
	SayHello(context.Context, *HelloReq) (*HelloRes, error)
	HelloBack(context.Context, *HelloReq) (*HelloBackRes, error)
}

// UnimplementedHelloServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHelloServiceServer struct {
}

func (*UnimplementedHelloServiceServer) SayHello(ctx context.Context, req *HelloReq) (*HelloRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedHelloServiceServer) HelloBack(ctx context.Context, req *HelloReq) (*HelloBackRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelloBack not implemented")
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello.HelloService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).SayHello(ctx, req.(*HelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloService_HelloBack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).HelloBack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello.HelloService/HelloBack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).HelloBack(ctx, req.(*HelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hello.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _HelloService_SayHello_Handler,
		},
		{
			MethodName: "HelloBack",
			Handler:    _HelloService_HelloBack_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/hello.proto",
}
